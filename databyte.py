# -*- coding: utf-8 -*-
"""databyte

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RiPraPDBbXq-jVbVqw6FzUNyoX1V_qC-
"""

pip install ucimlrepo

from ucimlrepo import fetch_ucirepo

# fetch dataset
spambase = fetch_ucirepo(id=94)

# data (as pandas dataframes)
X = spambase.data.features
y = spambase.data.targets

# metadata
print(spambase.metadata)

# variable information
print(spambase.variables)

X

y

"""Logistic Regression"""

from sklearn.linear_model import LogisticRegression

from sklearn.model_selection import train_test_split

X_train , X_test ,y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state=21)

X_train

X_test

log_reg = LogisticRegression(random_state=0).fit(X_train, y_train)

log_reg.predict(X_train)

log_reg.score(X_train , y_train)

log_reg.score(X_test, y_test)

predictions = log_reg.predict(X_test)

predictions

from sklearn.metrics import accuracy_score

accuracy_score(y_test,predictions)

from sklearn.metrics import precision_score

from sklearn.metrics import confusion_matrix

confusion_matrix(y_test, predictions)

precision_score(y_test, predictions)

from sklearn.metrics import f1_score
f1_score(y_test, predictions)

"""Naive Bayes"""

from sklearn.naive_bayes import GaussianNB

clf = GaussianNB()

clf.fit(X_train , y_train)

y_pred = clf.predict(X_test)

y_pred

from sklearn.metrics import classification_report

classification_report(y_test , y_pred)

accuracy_score(y_test,y_pred)

f1_score(y_test, predictions)

precision_score(y_test, y_pred)

confusion_matrix(y_test, y_pred)

"""SVM"""

from sklearn.svm import SVC

classifier = SVC(kernel = "poly", random_state=0)

classifier.fit(X_train, y_train)

y_pred = classifier.predict(X_test)

accuracy_score(y_test, y_pred)

confusion_matrix(y_test, y_pred)

precision_score(y_test, y_pred)

f1_score(y_test, y_pred)

